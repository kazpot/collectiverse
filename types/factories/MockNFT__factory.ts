/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockNFT, MockNFTInterface } from "../MockNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "marketPlaceAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "createToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b4438038062001b448339810160408190526200003491620001a6565b604080518082018252600f81526e54657374204e465420546f6b656e7360881b6020808301918252835180850190945260038452621514d560ea1b9084015281519192916200008691600091620000c6565b5080516200009c906001906020840190620000c6565b5050600880546001600160a01b0319166001600160a01b039390931692909217909155506200021a565b828054620000d490620001e9565b90600052602060002090601f016020900481019282620000f8576000855562000143565b82601f106200011357805160ff191683800117855562000143565b8280016001018555821562000143579182015b828111156200014357825182559160200191906001019062000126565b506200015192915062000155565b5090565b5b8082111562000151576000815560010162000156565b60006001600160a01b0382165b92915050565b6200018a816200016c565b81146200019657600080fd5b50565b805162000179816200017f565b600060208284031215620001bd57620001bd600080fd5b6000620001cb848462000199565b949350505050565b634e487b7160e01b600052602260045260246000fd5b600281046001821680620001fe57607f821691505b60208210811415620002145762000214620001d3565b50919050565b61191a806200022a6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d6578063b88d4fde146101e9578063c87b56dd146101fc578063e985e9c51461020f57600080fd5b80636352211e146101a857806370a08231146101bb57806395d89b41146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461014d57806323b872dd1461016257806342842e0e1461017557806345576f941461018857600080fd5b806301ffc9a7146100ef57806306fdde0314610118578063081812fc1461012d575b600080fd5b6101026100fd366004610ddd565b610222565b60405161010f9190610e08565b60405180910390f35b610120610274565b60405161010f9190610e74565b61014061013b366004610e96565b610306565b60405161010f9190610ed1565b61016061015b366004610ef3565b610352565b005b610160610170366004610f30565b6103d8565b610160610183366004610f30565b610409565b61019b61019636600461107b565b610424565b60405161010f91906110bc565b6101406101b6366004610e96565b61046c565b61019b6101c93660046110ca565b6104a1565b6101206104e5565b6101606101e43660046110fe565b6104f4565b6101606101f7366004611131565b61058c565b61012061020a366004610e96565b6105c4565b61010261021d3660046111b0565b6106f1565b60006001600160e01b031982166380ac58cd60e01b148061025357506001600160e01b03198216635b5e139f60e01b145b8061026e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610283906111f9565b80601f01602080910402602001604051908101604052809291908181526020018280546102af906111f9565b80156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b5050505050905090565b60006103118261071f565b6103365760405162461bcd60e51b815260040161032d90611272565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061035d8261046c565b9050806001600160a01b0316836001600160a01b031614156103915760405162461bcd60e51b815260040161032d906112c0565b336001600160a01b03821614806103ad57506103ad81336106f1565b6103c95760405162461bcd60e51b815260040161032d9061132a565b6103d3838361073c565b505050565b6103e233826107aa565b6103fe5760405162461bcd60e51b815260040161032d90611388565b6103d3838383610827565b6103d38383836040518060200160405280600081525061058c565b6000610434600780546001019055565b600061043f60075490565b905061044b3382610949565b6104558184610a1c565b60085461026e906001600160a01b031660016104f4565b6000818152600260205260408120546001600160a01b03168061026e5760405162461bcd60e51b815260040161032d906113de565b60006001600160a01b0382166104c95760405162461bcd60e51b815260040161032d90611435565b506001600160a01b031660009081526003602052604090205490565b606060018054610283906111f9565b6001600160a01b03821633141561051d5760405162461bcd60e51b815260040161032d9061147c565b3360008181526005602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610580908590610e08565b60405180910390a35050565b61059633836107aa565b6105b25760405162461bcd60e51b815260040161032d90611388565b6105be84848484610a60565b50505050565b60606105cf8261071f565b6105eb5760405162461bcd60e51b815260040161032d906114da565b60008281526006602052604081208054610604906111f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610630906111f9565b801561067d5780601f106106525761010080835404028352916020019161067d565b820191906000526020600020905b81548152906001019060200180831161066057829003601f168201915b50505050509050600061069b60408051602081019091526000815290565b90508051600014156106ae575092915050565b8151156106e05780826040516020016106c892919061150c565b60405160208183030381529060405292505050919050565b6106e984610a93565b949350505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906107718261046c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006107b58261071f565b6107d15760405162461bcd60e51b815260040161032d9061156d565b60006107dc8361046c565b9050806001600160a01b0316846001600160a01b031614806108175750836001600160a01b031661080c84610306565b6001600160a01b0316145b806106e957506106e981856106f1565b826001600160a01b031661083a8261046c565b6001600160a01b0316146108605760405162461bcd60e51b815260040161032d906115c3565b6001600160a01b0382166108865760405162461bcd60e51b815260040161032d90611614565b61089160008261073c565b6001600160a01b03831660009081526003602052604081208054600192906108ba90849061163a565b90915550506001600160a01b03821660009081526003602052604081208054600192906108e8908490611651565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b03821661096f5760405162461bcd60e51b815260040161032d9061169b565b6109788161071f565b156109955760405162461bcd60e51b815260040161032d906116df565b6001600160a01b03821660009081526003602052604081208054600192906109be908490611651565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610a258261071f565b610a415760405162461bcd60e51b815260040161032d9061173a565b600082815260066020908152604090912082516103d392840190610d1f565b610a6b848484610827565b610a7784848484610b23565b6105be5760405162461bcd60e51b815260040161032d90611799565b6060610a9e8261071f565b610aba5760405162461bcd60e51b815260040161032d906117f5565b6000610ad160408051602081019091526000815290565b90506000815111610af15760405180602001604052806000815250610b1c565b80610afb84610c21565b604051602001610b0c92919061150c565b6040516020818303038152906040525b9392505050565b60006001600160a01b0384163b15610c1657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610b67903390899088908890600401611805565b6020604051808303816000875af1925050508015610ba2575060408051601f3d908101601f19168201909252610b9f91810190611854565b60015b610bfc573d808015610bd0576040519150601f19603f3d011682016040523d82523d6000602084013e610bd5565b606091505b508051610bf45760405162461bcd60e51b815260040161032d90611799565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506106e9565b506001949350505050565b606081610c455750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610c6f5780610c5981611875565b9150610c689050600a836118a6565b9150610c49565b60008167ffffffffffffffff811115610c8a57610c8a610f80565b6040519080825280601f01601f191660200182016040528015610cb4576020820181803683370190505b5090505b84156106e957610cc960018361163a565b9150610cd6600a866118ba565b610ce1906030611651565b60f81b818381518110610cf657610cf66118ce565b60200101906001600160f81b031916908160001a905350610d18600a866118a6565b9450610cb8565b828054610d2b906111f9565b90600052602060002090601f016020900481019282610d4d5760008555610d93565b82601f10610d6657805160ff1916838001178555610d93565b82800160010185558215610d93579182015b82811115610d93578251825591602001919060010190610d78565b50610d9f929150610da3565b5090565b5b80821115610d9f5760008155600101610da4565b6001600160e01b031981165b8114610dcf57600080fd5b50565b803561026e81610db8565b600060208284031215610df257610df2600080fd5b60006106e98484610dd2565b8015155b82525050565b6020810161026e8284610dfe565b60005b83811015610e31578181015183820152602001610e19565b838111156105be5750506000910152565b6000610e4c825190565b808452602084019350610e63818560208601610e16565b601f01601f19169290920192915050565b60208082528101610b1c8184610e42565b80610dc4565b803561026e81610e85565b600060208284031215610eab57610eab600080fd5b60006106e98484610e8b565b60006001600160a01b03821661026e565b610e0281610eb7565b6020810161026e8284610ec8565b610dc481610eb7565b803561026e81610edf565b60008060408385031215610f0957610f09600080fd5b6000610f158585610ee8565b9250506020610f2685828601610e8b565b9150509250929050565b600080600060608486031215610f4857610f48600080fd5b6000610f548686610ee8565b9350506020610f6586828701610ee8565b9250506040610f7686828701610e8b565b9150509250925092565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610fbc57610fbc610f80565b6040525050565b6000610fce60405190565b9050610fda8282610f96565b919050565b600067ffffffffffffffff821115610ff957610ff9610f80565b601f19601f83011660200192915050565b82818337506000910152565b600061102961102484610fdf565b610fc3565b90508281526020810184848401111561104457611044600080fd5b61104f84828561100a565b509392505050565b600082601f83011261106b5761106b600080fd5b81356106e9848260208601611016565b60006020828403121561109057611090600080fd5b813567ffffffffffffffff8111156110aa576110aa600080fd5b6106e984828501611057565b80610e02565b6020810161026e82846110b6565b6000602082840312156110df576110df600080fd5b60006106e98484610ee8565b801515610dc4565b803561026e816110eb565b6000806040838503121561111457611114600080fd5b60006111208585610ee8565b9250506020610f26858286016110f3565b6000806000806080858703121561114a5761114a600080fd5b60006111568787610ee8565b945050602061116787828801610ee8565b935050604061117887828801610e8b565b925050606085013567ffffffffffffffff81111561119857611198600080fd5b6111a487828801611057565b91505092959194509250565b600080604083850312156111c6576111c6600080fd5b60006111d28585610ee8565b9250506020610f2685828601610ee8565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061120d57607f821691505b60208210811415611220576112206111e3565b50919050565b602c81526000602082017f4552433732313a20617070726f76656420717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015291505b5060400190565b6020808252810161026e81611226565b602181526000602082017f4552433732313a20617070726f76616c20746f2063757272656e74206f776e658152603960f91b6020820152915061126b565b6020808252810161026e81611282565b603881526000602082017f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7781527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020820152915061126b565b6020808252810161026e816112d0565b603181526000602082017f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f8152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6020820152915061126b565b6020808252810161026e8161133a565b602981526000602082017f4552433732313a206f776e657220717565727920666f72206e6f6e657869737481526832b73a103a37b5b2b760b91b6020820152915061126b565b6020808252810161026e81611398565b602a81526000602082017f4552433732313a2062616c616e636520717565727920666f7220746865207a65815269726f206164647265737360b01b6020820152915061126b565b6020808252810161026e816113ee565b601981526000602082017f4552433732313a20617070726f766520746f2063616c6c657200000000000000815291505b5060200190565b6020808252810161026e81611445565b603181526000602082017f45524337323155524953746f726167653a2055524920717565727920666f72208152703737b732bc34b9ba32b73a103a37b5b2b760791b6020820152915061126b565b6020808252810161026e8161148c565b60006114f4825190565b611502818560208601610e16565b9290920192915050565b600061151882856114ea565b91506106e982846114ea565b602c81526000602082017f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b6020820152915061126b565b6020808252810161026e81611524565b602981526000602082017f4552433732313a207472616e73666572206f6620746f6b656e2074686174206981526839903737ba1037bbb760b91b6020820152915061126b565b6020808252810161026e8161157d565b602481526000602082017f4552433732313a207472616e7366657220746f20746865207a65726f206164648152637265737360e01b6020820152915061126b565b6020808252810161026e816115d3565b634e487b7160e01b600052601160045260246000fd5b60008282101561164c5761164c611624565b500390565b6000821982111561166457611664611624565b500190565b60208082527f4552433732313a206d696e7420746f20746865207a65726f206164647265737391019081526000611475565b6020808252810161026e81611669565b601c81526000602082017f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081529150611475565b6020808252810161026e816116ab565b602e81526000602082017f45524337323155524953746f726167653a2055524920736574206f66206e6f6e81526d32bc34b9ba32b73a103a37b5b2b760911b6020820152915061126b565b6020808252810161026e816116ef565b603281526000602082017f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6020820152915061126b565b6020808252810161026e8161174a565b602f81526000602082017f4552433732314d657461646174613a2055524920717565727920666f72206e6f81526e3732bc34b9ba32b73a103a37b5b2b760891b6020820152915061126b565b6020808252810161026e816117a9565b608081016118138287610ec8565b6118206020830186610ec8565b61182d60408301856110b6565b818103606083015261183f8184610e42565b9695505050505050565b805161026e81610db8565b60006020828403121561186957611869600080fd5b60006106e98484611849565b600060001982141561188957611889611624565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826118b5576118b5611890565b500490565b6000826118c9576118c9611890565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220126c7d3920c32869e9221ae4bcee32c2142282717a06911a60db8061b337903564736f6c634300080b0033";

type MockNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockNFT__factory extends ContractFactory {
  constructor(...args: MockNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    marketPlaceAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockNFT> {
    return super.deploy(
      marketPlaceAddress,
      overrides || {}
    ) as Promise<MockNFT>;
  }
  getDeployTransaction(
    marketPlaceAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(marketPlaceAddress, overrides || {});
  }
  attach(address: string): MockNFT {
    return super.attach(address) as MockNFT;
  }
  connect(signer: Signer): MockNFT__factory {
    return super.connect(signer) as MockNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockNFTInterface {
    return new utils.Interface(_abi) as MockNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockNFT {
    return new Contract(address, _abi, signerOrProvider) as MockNFT;
  }
}
