/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UpgradableProxy,
  UpgradableProxyInterface,
} from "../UpgradableProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "ProxyOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "getImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferProxyOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImpl",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610531806100206000396000f3fe6080604052600436106100435760003560e01c8063025313a21461005a5780636fbc15e91461008a578063dfb80831146100aa578063f1739cae146100c857610052565b36610052576100506100e8565b005b6100506100e8565b34801561006657600080fd5b506001546001600160a01b03165b60405161008191906102cf565b60405180910390f35b34801561009657600080fd5b506100506100a5366004610402565b610104565b3480156100b657600080fd5b506000546001600160a01b0316610074565b3480156100d457600080fd5b506100506100e336600461045a565b610193565b6101026100fd6000546001600160a01b031690565b610226565b565b6001546001600160a01b0316331461011b57600080fd5b6101248261024a565b6000826001600160a01b03168260405161013e91906104cd565b6000604051808303816000865af19150503d806000811461017b576040519150601f19603f3d011682016040523d82523d6000602084013e610180565b606091505b505090508061018e57600080fd5b505050565b6001546001600160a01b031633146101aa57600080fd5b6001600160a01b0381166101bd57600080fd5b6001546040517f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd9916101fc916001600160a01b039091169084906104e0565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b3660008037600080366000845af43d6000803e808015610245573d6000f35b3d6000fd5b6000546001600160a01b038281169116141561026557600080fd5b600080546001600160a01b0319166001600160a01b038316908117825560405190917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b91a250565b60006001600160a01b0382165b92915050565b6102c9816102ad565b82525050565b602081016102ba82846102c0565b6102e6816102ad565b81146102f157600080fd5b50565b80356102ba816102dd565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561033b5761033b6102ff565b6040525050565b600061034d60405190565b90506103598282610315565b919050565b600067ffffffffffffffff821115610378576103786102ff565b601f19601f83011660200192915050565b82818337506000910152565b60006103a86103a38461035e565b610342565b9050828152602081018484840111156103c3576103c3600080fd5b6103ce848285610389565b509392505050565b600082601f8301126103ea576103ea600080fd5b81356103fa848260208601610395565b949350505050565b6000806040838503121561041857610418600080fd5b600061042485856102f4565b925050602083013567ffffffffffffffff81111561044457610444600080fd5b610450858286016103d6565b9150509250929050565b60006020828403121561046f5761046f600080fd5b60006103fa84846102f4565b60005b8381101561049657818101518382015260200161047e565b838111156104a5576000848401525b50505050565b60006104b5825190565b6104c381856020860161047b565b9290920192915050565b60006104d982846104ab565b9392505050565b604081016104ee82856102c0565b6104d960208301846102c056fea2646970667358221220e6d3d64b1a5d4445d1fa954f02619f666e1f4e6427521a988eb18ea9748c8a6b64736f6c634300080b0033";

type UpgradableProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradableProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradableProxy__factory extends ContractFactory {
  constructor(...args: UpgradableProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpgradableProxy> {
    return super.deploy(overrides || {}) as Promise<UpgradableProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UpgradableProxy {
    return super.attach(address) as UpgradableProxy;
  }
  connect(signer: Signer): UpgradableProxy__factory {
    return super.connect(signer) as UpgradableProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradableProxyInterface {
    return new utils.Interface(_abi) as UpgradableProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradableProxy {
    return new Contract(address, _abi, signerOrProvider) as UpgradableProxy;
  }
}
